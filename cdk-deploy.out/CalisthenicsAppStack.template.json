{
 "Resources": {
  "CalisthenicsUserPoolE977672F": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "Policies": {
     "PasswordPolicy": {
      "MinimumLength": 8,
      "RequireLowercase": true,
      "RequireNumbers": true,
      "RequireUppercase": true
     }
    },
    "Schema": [
     {
      "Mutable": true,
      "Name": "email",
      "Required": true
     },
     {
      "Mutable": true,
      "Name": "given_name",
      "Required": true
     },
     {
      "Mutable": true,
      "Name": "family_name",
      "Required": true
     },
     {
      "AttributeDataType": "String",
      "Mutable": true,
      "Name": "role",
      "StringAttributeConstraints": {
       "MaxLength": "20",
       "MinLength": "1"
      }
     },
     {
      "AttributeDataType": "String",
      "Mutable": true,
      "Name": "division",
      "StringAttributeConstraints": {
       "MaxLength": "50",
       "MinLength": "1"
      }
     },
     {
      "AttributeDataType": "String",
      "Mutable": true,
      "Name": "isSuperAdmin",
      "StringAttributeConstraints": {
       "MaxLength": "5",
       "MinLength": "1"
      }
     },
     {
      "AttributeDataType": "String",
      "Mutable": true,
      "Name": "organizerRole",
      "StringAttributeConstraints": {
       "MaxLength": "20",
       "MinLength": "1"
      }
     }
    ],
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UserPoolName": "calisthenics-users",
    "UsernameAttributes": [
     "email"
    ],
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsUserPool/Resource"
   }
  },
  "CalisthenicsUserPoolClientA2999F75": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "implicit",
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "profile",
     "phone",
     "email",
     "openid",
     "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
     "https://example.com"
    ],
    "ExplicitAuthFlows": [
     "ALLOW_USER_PASSWORD_AUTH",
     "ALLOW_USER_SRP_AUTH",
     "ALLOW_REFRESH_TOKEN_AUTH"
    ],
    "GenerateSecret": false,
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "UserPoolId": {
     "Ref": "CalisthenicsUserPoolE977672F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsUserPoolClient/Resource"
   }
  },
  "EventsTableD24865E5": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "eventId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "status",
      "AttributeType": "S"
     },
     {
      "AttributeName": "startDate",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "status-index",
      "KeySchema": [
       {
        "AttributeName": "status",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "startDate",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "eventId",
      "KeyType": "HASH"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/EventsTable/Resource"
   }
  },
  "OrganizationsTable01047E98": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "organizationId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "organizationId",
      "KeyType": "HASH"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/OrganizationsTable/Resource"
   }
  },
  "OrganizationMembersTableA6523B04": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "organizationId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "userId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "user-organizations-index",
      "KeySchema": [
       {
        "AttributeName": "userId",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "organizationId",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "organizationId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "userId",
      "KeyType": "RANGE"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/OrganizationMembersTable/Resource"
   }
  },
  "OrganizationEventsTable6C44D408": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "organizationId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "eventId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "event-organization-index",
      "KeySchema": [
       {
        "AttributeName": "eventId",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "organizationId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "eventId",
      "KeyType": "RANGE"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/OrganizationEventsTable/Resource"
   }
  },
  "OrganizerEventsTable6FAFF2EB": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "userId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "eventId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "event-organizers-index",
      "KeySchema": [
       {
        "AttributeName": "eventId",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "userId",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "userId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "eventId",
      "KeyType": "RANGE"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/OrganizerEventsTable/Resource"
   }
  },
  "AthleteEventsTableBA7B788A": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "userId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "eventId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "registeredAt",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "event-athletes-index",
      "KeySchema": [
       {
        "AttributeName": "eventId",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "registeredAt",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "userId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "eventId",
      "KeyType": "RANGE"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/AthleteEventsTable/Resource"
   }
  },
  "AthletesTableF6FEDE0B": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "userId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "userId",
      "KeyType": "HASH"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/AthletesTable/Resource"
   }
  },
  "EventDaysTable8D7DA33D": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "eventId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "dayId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "eventId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "dayId",
      "KeyType": "RANGE"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/EventDaysTable/Resource"
   }
  },
  "CategoriesTable9FFF5A67": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "eventId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "categoryId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "eventId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "categoryId",
      "KeyType": "RANGE"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CategoriesTable/Resource"
   }
  },
  "WodsTableFA80581A": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "eventId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "wodId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "eventId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "wodId",
      "KeyType": "RANGE"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/WodsTable/Resource"
   }
  },
  "ScoresTable6CB35494": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "eventId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "scoreId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "dayId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "score",
      "AttributeType": "N"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "day-scores-index",
      "KeySchema": [
       {
        "AttributeName": "dayId",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "score",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "eventId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "scoreId",
      "KeyType": "RANGE"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/ScoresTable/Resource"
   }
  },
  "SessionsTable7C302024": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "sessionId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "userId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "userId-index",
      "KeySchema": [
       {
        "AttributeName": "userId",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "sessionId",
      "KeyType": "HASH"
     }
    ],
    "TimeToLiveSpecification": {
     "AttributeName": "ttl",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/SessionsTable/Resource"
   }
  },
  "SchedulesTableFBEB0188": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "eventId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "scheduleId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "eventId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "scheduleId",
      "KeyType": "RANGE"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/SchedulesTable/Resource"
   }
  },
  "HeatsTableC2C9A156": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "scheduleId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "heatId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "scheduleId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "heatId",
      "KeyType": "RANGE"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/HeatsTable/Resource"
   }
  },
  "ClassificationFiltersTable8E1DB1EC": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "eventId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "filterId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "eventId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "filterId",
      "KeyType": "RANGE"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/ClassificationFiltersTable/Resource"
   }
  },
  "WebsiteBucket75C24D94": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": "calisthenics-app-571340586587",
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/WebsiteBucket/Resource"
   }
  },
  "WebsiteBucketPolicyE10E3262": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "WebsiteBucket75C24D94"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "WebsiteBucket75C24D94",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "WebsiteBucket75C24D94",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Condition": {
        "StringEquals": {
         "AWS:SourceArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":cloudfront::",
            {
             "Ref": "AWS::AccountId"
            },
            ":distribution/",
            {
             "Ref": "Distribution830FAC52"
            }
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "cloudfront.amazonaws.com"
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "WebsiteBucket75C24D94",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": "s3:GetObject",
       "Condition": {
        "StringEquals": {
         "AWS:SourceArn": {
          "Fn::Join": [
           "",
           [
            "arn:aws:cloudfront::571340586587:distribution/",
            {
             "Ref": "Distribution830FAC52"
            }
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "cloudfront.amazonaws.com"
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "WebsiteBucket75C24D94",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/WebsiteBucket/Policy/Resource"
   }
  },
  "WebsiteBucketAutoDeleteObjectsCustomResource8750E461": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "WebsiteBucket75C24D94"
    }
   },
   "DependsOn": [
    "WebsiteBucketPolicyE10E3262"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/WebsiteBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "WebsiteBucket75C24D94"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "EventImagesBucketA567DC75": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": "calisthenics-event-images-571340586587",
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "PUT",
        "POST"
       ],
       "AllowedOrigins": [
        "*"
       ]
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "IgnorePublicAcls": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/EventImagesBucket/Resource"
   }
  },
  "EventImagesBucketPolicy49FFF3BE": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "EventImagesBucketA567DC75"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "AWS": "*"
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "EventImagesBucketA567DC75",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "EventImagesBucketA567DC75",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EventImagesBucketA567DC75",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/EventImagesBucket/Policy/Resource"
   }
  },
  "EventImagesBucketAutoDeleteObjectsCustomResource2AAAE2B4": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "EventImagesBucketA567DC75"
    }
   },
   "DependsOn": [
    "EventImagesBucketPolicy49FFF3BE"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/EventImagesBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "OAC": {
   "Type": "AWS::CloudFront::OriginAccessControl",
   "Properties": {
    "OriginAccessControlConfig": {
     "Description": "OAC for Calisthenics App",
     "Name": "calisthenics-app-oac",
     "OriginAccessControlOriginType": "s3",
     "SigningBehavior": "always",
     "SigningProtocol": "sigv4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/OAC"
   }
  },
  "DistributionOrigin1S3OriginAccessControlEB606076": {
   "Type": "AWS::CloudFront::OriginAccessControl",
   "Properties": {
    "OriginAccessControlConfig": {
     "Name": "CalisthenicsAppStackDistribuOrigin1S3OriginAccessControl43FD9E7D",
     "OriginAccessControlOriginType": "s3",
     "SigningBehavior": "always",
     "SigningProtocol": "sigv4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/Distribution/Origin1/S3OriginAccessControl/Resource"
   }
  },
  "Distribution830FAC52": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "CustomErrorResponses": [
      {
       "ErrorCode": 403,
       "ResponseCode": 200,
       "ResponsePagePath": "/index.html"
      },
      {
       "ErrorCode": 404,
       "ResponseCode": 200,
       "ResponsePagePath": "/index.html"
      }
     ],
     "DefaultCacheBehavior": {
      "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
      "Compress": true,
      "TargetOriginId": "CalisthenicsAppStackDistributionOrigin16A43DB1A",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "WebsiteBucket75C24D94",
         "RegionalDomainName"
        ]
       },
       "Id": "CalisthenicsAppStackDistributionOrigin16A43DB1A",
       "OriginAccessControlId": {
        "Fn::GetAtt": [
         "DistributionOrigin1S3OriginAccessControlEB606076",
         "Id"
        ]
       },
       "S3OriginConfig": {
        "OriginAccessIdentity": ""
       }
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/Distribution/Resource"
   }
  },
  "OrganizationsLambdaServiceRole73C5E0CA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/OrganizationsLambda/ServiceRole/Resource"
   }
  },
  "OrganizationsLambdaServiceRoleDefaultPolicy8379A870": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "OrganizationEventsTable6C44D408",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationMembersTableA6523B04",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "OrganizationEventsTable6C44D408",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "OrganizationMembersTableA6523B04",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "OrganizationsLambdaServiceRoleDefaultPolicy8379A870",
    "Roles": [
     {
      "Ref": "OrganizationsLambdaServiceRole73C5E0CA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/OrganizationsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "OrganizationsLambdaF8714A36": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "CalisthenicsUserPoolE977672F"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "ORGANIZATION_MEMBERS_TABLE": {
       "Ref": "OrganizationMembersTableA6523B04"
      },
      "ORGANIZATION_EVENTS_TABLE": {
       "Ref": "OrganizationEventsTable6C44D408"
      }
     }
    },
    "Handler": "organizations.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "OrganizationsLambdaServiceRole73C5E0CA",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "OrganizationsLambdaServiceRoleDefaultPolicy8379A870",
    "OrganizationsLambdaServiceRole73C5E0CA"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/OrganizationsLambda/Resource",
    "aws:asset:path": "asset.77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CompetitionsLambdaServiceRole93D4958F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CompetitionsLambda/ServiceRole/Resource"
   }
  },
  "CompetitionsLambdaServiceRoleDefaultPolicyDA0346A7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EventsTableD24865E5",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationEventsTable6C44D408",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EventsTableD24865E5",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "OrganizationEventsTable6C44D408",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "OrganizationMembersTableA6523B04",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "OrganizationMembersTableA6523B04",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "EventImagesBucketA567DC75",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": "events:PutEvents",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CompetitionsLambdaServiceRoleDefaultPolicyDA0346A7",
    "Roles": [
     {
      "Ref": "CompetitionsLambdaServiceRole93D4958F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CompetitionsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CompetitionsLambda2E373F68": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b.zip"
    },
    "Description": "Competitions service with public events endpoints - v2",
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "CalisthenicsUserPoolE977672F"
      },
      "EVENTS_TABLE": {
       "Ref": "EventsTableD24865E5"
      },
      "ORGANIZATION_EVENTS_TABLE": {
       "Ref": "OrganizationEventsTable6C44D408"
      },
      "ORGANIZATION_MEMBERS_TABLE": {
       "Ref": "OrganizationMembersTableA6523B04"
      },
      "EVENT_IMAGES_BUCKET": {
       "Ref": "EventImagesBucketA567DC75"
      }
     }
    },
    "Handler": "competitions.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "CompetitionsLambdaServiceRole93D4958F",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "CompetitionsLambdaServiceRoleDefaultPolicyDA0346A7",
    "CompetitionsLambdaServiceRole93D4958F"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CompetitionsLambda/Resource",
    "aws:asset:path": "asset.77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "EventsLambdaServiceRoleE5FF84E7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/EventsLambda/ServiceRole/Resource"
   }
  },
  "EventsLambdaServiceRoleDefaultPolicy437BE1FA": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EventDaysTable8D7DA33D",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EventImagesBucketA567DC75",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EventImagesBucketA567DC75",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EventsLambdaServiceRoleDefaultPolicy437BE1FA",
    "Roles": [
     {
      "Ref": "EventsLambdaServiceRoleE5FF84E7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/EventsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "EventsLambdaE6050439": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "CalisthenicsUserPoolE977672F"
      },
      "EVENT_DAYS_TABLE": {
       "Ref": "EventDaysTable8D7DA33D"
      },
      "EVENT_IMAGES_BUCKET": {
       "Ref": "EventImagesBucketA567DC75"
      }
     }
    },
    "Handler": "events.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "EventsLambdaServiceRoleE5FF84E7",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "EventsLambdaServiceRoleDefaultPolicy437BE1FA",
    "EventsLambdaServiceRoleE5FF84E7"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/EventsLambda/Resource",
    "aws:asset:path": "asset.77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ScoresLambdaServiceRoleFB2E6D71": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/ScoresLambda/ServiceRole/Resource"
   }
  },
  "ScoresLambdaServiceRoleDefaultPolicyBFAAD5BC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ScoresTable6CB35494",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ScoresTable6CB35494",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AthletesTableF6FEDE0B",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": "events:PutEvents",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ScoresLambdaServiceRoleDefaultPolicyBFAAD5BC",
    "Roles": [
     {
      "Ref": "ScoresLambdaServiceRoleFB2E6D71"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/ScoresLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ScoresLambdaB9950DB3": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b.zip"
    },
    "Description": "Scores service with query parameter support - v2",
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "CalisthenicsUserPoolE977672F"
      },
      "SCORES_TABLE": {
       "Ref": "ScoresTable6CB35494"
      },
      "ATHLETES_TABLE": {
       "Ref": "AthletesTableF6FEDE0B"
      }
     }
    },
    "Handler": "scores.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "ScoresLambdaServiceRoleFB2E6D71",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "ScoresLambdaServiceRoleDefaultPolicyBFAAD5BC",
    "ScoresLambdaServiceRoleFB2E6D71"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/ScoresLambda/Resource",
    "aws:asset:path": "asset.77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CategoriesLambdaServiceRole3A1B1D2A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CategoriesLambda/ServiceRole/Resource"
   }
  },
  "CategoriesLambdaServiceRoleDefaultPolicyEE4A4039": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "CategoriesTable9FFF5A67",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "OrganizationEventsTable6C44D408",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "OrganizationEventsTable6C44D408",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CategoriesLambdaServiceRoleDefaultPolicyEE4A4039",
    "Roles": [
     {
      "Ref": "CategoriesLambdaServiceRole3A1B1D2A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CategoriesLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CategoriesLambda193BF92F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b.zip"
    },
    "Description": "Categories service with fixed CORS and auth - v4",
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "CalisthenicsUserPoolE977672F"
      },
      "CATEGORIES_TABLE": {
       "Ref": "CategoriesTable9FFF5A67"
      },
      "ORGANIZATION_EVENTS_TABLE": {
       "Ref": "OrganizationEventsTable6C44D408"
      }
     }
    },
    "Handler": "categories.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "CategoriesLambdaServiceRole3A1B1D2A",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "CategoriesLambdaServiceRoleDefaultPolicyEE4A4039",
    "CategoriesLambdaServiceRole3A1B1D2A"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CategoriesLambda/Resource",
    "aws:asset:path": "asset.77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "WodsLambdaServiceRoleFFCD5D9E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/WodsLambda/ServiceRole/Resource"
   }
  },
  "WodsLambdaServiceRoleDefaultPolicyA90E5205": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "WodsTableFA80581A",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "WodsLambdaServiceRoleDefaultPolicyA90E5205",
    "Roles": [
     {
      "Ref": "WodsLambdaServiceRoleFFCD5D9E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/WodsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "WodsLambda91396CAF": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b.zip"
    },
    "Description": "WODs service - DDD compliant - v3",
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "CalisthenicsUserPoolE977672F"
      },
      "WODS_TABLE": {
       "Ref": "WodsTableFA80581A"
      }
     }
    },
    "Handler": "wods.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "WodsLambdaServiceRoleFFCD5D9E",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "WodsLambdaServiceRoleDefaultPolicyA90E5205",
    "WodsLambdaServiceRoleFFCD5D9E"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/WodsLambda/Resource",
    "aws:asset:path": "asset.77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "UsersLambdaServiceRole76DAD472": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/UsersLambda/ServiceRole/Resource"
   }
  },
  "UsersLambdaServiceRoleDefaultPolicy35DA6411": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AthleteEventsTableBA7B788A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "AthletesTableF6FEDE0B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AthleteEventsTableBA7B788A",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "UsersLambdaServiceRoleDefaultPolicy35DA6411",
    "Roles": [
     {
      "Ref": "UsersLambdaServiceRole76DAD472"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/UsersLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "UsersLambda3F4CC07E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b.zip"
    },
    "Description": "Users service with athlete profile update support - v2",
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "CalisthenicsUserPoolE977672F"
      },
      "ATHLETES_TABLE": {
       "Ref": "AthletesTableF6FEDE0B"
      },
      "ATHLETE_EVENTS_TABLE": {
       "Ref": "AthleteEventsTableBA7B788A"
      }
     }
    },
    "Handler": "users.handler",
    "MemorySize": 256,
    "ReservedConcurrentExecutions": 10,
    "Role": {
     "Fn::GetAtt": [
      "UsersLambdaServiceRole76DAD472",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "UsersLambdaServiceRoleDefaultPolicy35DA6411",
    "UsersLambdaServiceRole76DAD472"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/UsersLambda/Resource",
    "aws:asset:path": "asset.77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "AnalyticsLambdaServiceRole5BA14A8F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/AnalyticsLambda/ServiceRole/Resource"
   }
  },
  "AnalyticsLambdaServiceRoleDefaultPolicy17E4F380": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AthleteEventsTableBA7B788A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "AthletesTableF6FEDE0B",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CategoriesTable9FFF5A67",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "EventsTableD24865E5",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationEventsTable6C44D408",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationMembersTableA6523B04",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ScoresTable6CB35494",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "WodsTableFA80581A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AthleteEventsTableBA7B788A",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EventsTableD24865E5",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "OrganizationEventsTable6C44D408",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "OrganizationMembersTableA6523B04",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ScoresTable6CB35494",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AnalyticsLambdaServiceRoleDefaultPolicy17E4F380",
    "Roles": [
     {
      "Ref": "AnalyticsLambdaServiceRole5BA14A8F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/AnalyticsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AnalyticsLambda406A5DA6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b.zip"
    },
    "Description": "Analytics service with organization filtering - v1",
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "CalisthenicsUserPoolE977672F"
      },
      "EVENTS_TABLE": {
       "Ref": "EventsTableD24865E5"
      },
      "ATHLETES_TABLE": {
       "Ref": "AthletesTableF6FEDE0B"
      },
      "ATHLETE_EVENTS_TABLE": {
       "Ref": "AthleteEventsTableBA7B788A"
      },
      "CATEGORIES_TABLE": {
       "Ref": "CategoriesTable9FFF5A67"
      },
      "WODS_TABLE": {
       "Ref": "WodsTableFA80581A"
      },
      "SCORES_TABLE": {
       "Ref": "ScoresTable6CB35494"
      },
      "ORGANIZATION_EVENTS_TABLE": {
       "Ref": "OrganizationEventsTable6C44D408"
      },
      "ORGANIZATION_MEMBERS_TABLE": {
       "Ref": "OrganizationMembersTableA6523B04"
      }
     }
    },
    "Handler": "analytics.handler",
    "MemorySize": 256,
    "ReservedConcurrentExecutions": 5,
    "Role": {
     "Fn::GetAtt": [
      "AnalyticsLambdaServiceRole5BA14A8F",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "AnalyticsLambdaServiceRoleDefaultPolicy17E4F380",
    "AnalyticsLambdaServiceRole5BA14A8F"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/AnalyticsLambda/Resource",
    "aws:asset:path": "asset.77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "SessionsLambdaServiceRole078C7EA5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/SessionsLambda/ServiceRole/Resource"
   }
  },
  "SessionsLambdaServiceRoleDefaultPolicy5246BFF2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SessionsTable7C302024",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SessionsTable7C302024",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SessionsLambdaServiceRoleDefaultPolicy5246BFF2",
    "Roles": [
     {
      "Ref": "SessionsLambdaServiceRole078C7EA5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/SessionsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "SessionsLambda02CB2700": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "CalisthenicsUserPoolE977672F"
      },
      "SESSIONS_TABLE": {
       "Ref": "SessionsTable7C302024"
      }
     }
    },
    "Handler": "sessions.handler",
    "MemorySize": 256,
    "ReservedConcurrentExecutions": 10,
    "Role": {
     "Fn::GetAtt": [
      "SessionsLambdaServiceRole078C7EA5",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "SessionsLambdaServiceRoleDefaultPolicy5246BFF2",
    "SessionsLambdaServiceRole078C7EA5"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/SessionsLambda/Resource",
    "aws:asset:path": "asset.77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GetEventDataLambdaServiceRoleF42916B5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/GetEventDataLambda/ServiceRole/Resource"
   }
  },
  "GetEventDataLambdaServiceRoleDefaultPolicy3DE9AF55": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EventDaysTable8D7DA33D",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "EventsTableD24865E5",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EventsTableD24865E5",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetEventDataLambdaServiceRoleDefaultPolicy3DE9AF55",
    "Roles": [
     {
      "Ref": "GetEventDataLambdaServiceRoleF42916B5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/GetEventDataLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetEventDataLambdaD2511766": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "CalisthenicsUserPoolE977672F"
      },
      "EVENTS_TABLE": {
       "Ref": "EventsTableD24865E5"
      },
      "EVENT_DAYS_TABLE": {
       "Ref": "EventDaysTable8D7DA33D"
      }
     }
    },
    "Handler": "get-event-data.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "GetEventDataLambdaServiceRoleF42916B5",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "GetEventDataLambdaServiceRoleDefaultPolicy3DE9AF55",
    "GetEventDataLambdaServiceRoleF42916B5"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/GetEventDataLambda/Resource",
    "aws:asset:path": "asset.77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GetAthletesDataLambdaServiceRole43827E99": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/GetAthletesDataLambda/ServiceRole/Resource"
   }
  },
  "GetAthletesDataLambdaServiceRoleDefaultPolicyF4DE7E43": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AthleteEventsTableBA7B788A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "AthletesTableF6FEDE0B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AthleteEventsTableBA7B788A",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetAthletesDataLambdaServiceRoleDefaultPolicyF4DE7E43",
    "Roles": [
     {
      "Ref": "GetAthletesDataLambdaServiceRole43827E99"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/GetAthletesDataLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetAthletesDataLambdaBA5A7C56": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "CalisthenicsUserPoolE977672F"
      },
      "ATHLETES_TABLE": {
       "Ref": "AthletesTableF6FEDE0B"
      },
      "ATHLETE_EVENTS_TABLE": {
       "Ref": "AthleteEventsTableBA7B788A"
      }
     }
    },
    "Handler": "get-athletes-data.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "GetAthletesDataLambdaServiceRole43827E99",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "GetAthletesDataLambdaServiceRoleDefaultPolicyF4DE7E43",
    "GetAthletesDataLambdaServiceRole43827E99"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/GetAthletesDataLambda/Resource",
    "aws:asset:path": "asset.77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GetCategoriesDataLambdaServiceRole1EEBFFA0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/GetCategoriesDataLambda/ServiceRole/Resource"
   }
  },
  "GetCategoriesDataLambdaServiceRoleDefaultPolicy0A2E72E3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "CategoriesTable9FFF5A67",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetCategoriesDataLambdaServiceRoleDefaultPolicy0A2E72E3",
    "Roles": [
     {
      "Ref": "GetCategoriesDataLambdaServiceRole1EEBFFA0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/GetCategoriesDataLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetCategoriesDataLambda85E7BCDE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "CalisthenicsUserPoolE977672F"
      },
      "CATEGORIES_TABLE": {
       "Ref": "CategoriesTable9FFF5A67"
      }
     }
    },
    "Handler": "get-categories-data.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "GetCategoriesDataLambdaServiceRole1EEBFFA0",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "GetCategoriesDataLambdaServiceRoleDefaultPolicy0A2E72E3",
    "GetCategoriesDataLambdaServiceRole1EEBFFA0"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/GetCategoriesDataLambda/Resource",
    "aws:asset:path": "asset.77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GetWodsDataLambdaServiceRole752BBDDB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/GetWodsDataLambda/ServiceRole/Resource"
   }
  },
  "GetWodsDataLambdaServiceRoleDefaultPolicyDB835653": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "WodsTableFA80581A",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetWodsDataLambdaServiceRoleDefaultPolicyDB835653",
    "Roles": [
     {
      "Ref": "GetWodsDataLambdaServiceRole752BBDDB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/GetWodsDataLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetWodsDataLambdaADA1FA52": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "CalisthenicsUserPoolE977672F"
      },
      "WODS_TABLE": {
       "Ref": "WodsTableFA80581A"
      }
     }
    },
    "Handler": "get-wods-data.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "GetWodsDataLambdaServiceRole752BBDDB",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "GetWodsDataLambdaServiceRoleDefaultPolicyDB835653",
    "GetWodsDataLambdaServiceRole752BBDDB"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/GetWodsDataLambda/Resource",
    "aws:asset:path": "asset.77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GenerateScheduleLambdaServiceRole1946F800": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/GenerateScheduleLambda/ServiceRole/Resource"
   }
  },
  "GenerateScheduleLambdaServiceRoleDefaultPolicyA910BF4A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SchedulesTableFBEB0188",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GenerateScheduleLambdaServiceRoleDefaultPolicyA910BF4A",
    "Roles": [
     {
      "Ref": "GenerateScheduleLambdaServiceRole1946F800"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/GenerateScheduleLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GenerateScheduleLambda99724C95": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "CalisthenicsUserPoolE977672F"
      },
      "SCHEDULES_TABLE": {
       "Ref": "SchedulesTableFBEB0188"
      }
     }
    },
    "Handler": "generate-schedule.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "GenerateScheduleLambdaServiceRole1946F800",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 60
   },
   "DependsOn": [
    "GenerateScheduleLambdaServiceRoleDefaultPolicyA910BF4A",
    "GenerateScheduleLambdaServiceRole1946F800"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/GenerateScheduleLambda/Resource",
    "aws:asset:path": "asset.77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "SchedulerStateMachineRole123FD26D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "states.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/SchedulerStateMachine/Role/Resource"
   }
  },
  "SchedulerStateMachineRoleDefaultPolicy92CA6A9F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "GenerateScheduleLambda99724C95",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "GetAthletesDataLambdaBA5A7C56",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "GetCategoriesDataLambda85E7BCDE",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "GetEventDataLambdaD2511766",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "GetWodsDataLambdaADA1FA52",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GenerateScheduleLambda99724C95",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GetAthletesDataLambdaBA5A7C56",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GetCategoriesDataLambda85E7BCDE",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GetEventDataLambdaD2511766",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GetWodsDataLambdaADA1FA52",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SchedulerStateMachineRoleDefaultPolicy92CA6A9F",
    "Roles": [
     {
      "Ref": "SchedulerStateMachineRole123FD26D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/SchedulerStateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "SchedulerStateMachineE5002A83": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"ParallelDataCollection\",\"States\":{\"ParallelDataCollection\":{\"Type\":\"Parallel\",\"Next\":\"GenerateScheduleTask\",\"Branches\":[{\"StartAt\":\"GetEventDataTask\",\"States\":{\"GetEventDataTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":\"$.eventResult\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "GetEventDataLambdaD2511766",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}}},{\"StartAt\":\"GetAthletesDataTask\",\"States\":{\"GetAthletesDataTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":\"$.athletesResult\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "GetAthletesDataLambdaBA5A7C56",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}}},{\"StartAt\":\"GetCategoriesDataTask\",\"States\":{\"GetCategoriesDataTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":\"$.categoriesResult\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "GetCategoriesDataLambda85E7BCDE",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}}},{\"StartAt\":\"GetWodsDataTask\",\"States\":{\"GetWodsDataTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":\"$.wodsResult\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "GetWodsDataLambdaADA1FA52",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}}}]},\"GenerateScheduleTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "GenerateScheduleLambda99724C95",
         "Arn"
        ]
       },
       "\",\"Payload\":{\"eventId.$\":\"$[0].eventId\",\"config.$\":\"$[0].config\",\"eventData.$\":\"$[0].eventResult.Payload.eventData\",\"days.$\":\"$[0].eventResult.Payload.days\",\"athletes.$\":\"$[1].athletesResult.Payload.athletes\",\"categories.$\":\"$[2].categoriesResult.Payload.categories\",\"wods.$\":\"$[3].wodsResult.Payload.wods\"}}}},\"TimeoutSeconds\":120}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "SchedulerStateMachineRole123FD26D",
      "Arn"
     ]
    },
    "StateMachineType": "EXPRESS"
   },
   "DependsOn": [
    "SchedulerStateMachineRoleDefaultPolicy92CA6A9F",
    "SchedulerStateMachineRole123FD26D"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/SchedulerStateMachine/Resource"
   }
  },
  "SchedulerLambdaServiceRoleD4D6A486": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/SchedulerLambda/ServiceRole/Resource"
   }
  },
  "SchedulerLambdaServiceRoleDefaultPolicyD483C1E1": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SchedulesTableFBEB0188",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": "states:StartSyncExecution",
       "Effect": "Allow",
       "Resource": {
        "Ref": "SchedulerStateMachineE5002A83"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SchedulerLambdaServiceRoleDefaultPolicyD483C1E1",
    "Roles": [
     {
      "Ref": "SchedulerLambdaServiceRoleD4D6A486"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/SchedulerLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "SchedulerLambdaBF444921": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b.zip"
    },
    "Description": "Step Functions scheduler - microservices compliant - v3",
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "CalisthenicsUserPoolE977672F"
      },
      "SCHEDULES_TABLE": {
       "Ref": "SchedulesTableFBEB0188"
      },
      "SCHEDULER_STATE_MACHINE_ARN": {
       "Ref": "SchedulerStateMachineE5002A83"
      }
     }
    },
    "Handler": "scheduler-stepfunctions.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "SchedulerLambdaServiceRoleD4D6A486",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 180
   },
   "DependsOn": [
    "SchedulerLambdaServiceRoleDefaultPolicyD483C1E1",
    "SchedulerLambdaServiceRoleD4D6A486"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/SchedulerLambda/Resource",
    "aws:asset:path": "asset.77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "PublicSchedulesLambdaServiceRoleEE90EAC3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/PublicSchedulesLambda/ServiceRole/Resource"
   }
  },
  "PublicSchedulesLambdaServiceRoleDefaultPolicy460C3997": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SchedulesTableFBEB0188",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PublicSchedulesLambdaServiceRoleDefaultPolicy460C3997",
    "Roles": [
     {
      "Ref": "PublicSchedulesLambdaServiceRoleEE90EAC3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/PublicSchedulesLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "PublicSchedulesLambda73E7914B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b.zip"
    },
    "Description": "Public schedules service for athlete access - v1",
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "CalisthenicsUserPoolE977672F"
      },
      "SCHEDULES_TABLE": {
       "Ref": "SchedulesTableFBEB0188"
      }
     }
    },
    "Handler": "public-schedules.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "PublicSchedulesLambdaServiceRoleEE90EAC3",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "PublicSchedulesLambdaServiceRoleDefaultPolicy460C3997",
    "PublicSchedulesLambdaServiceRoleEE90EAC3"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/PublicSchedulesLambda/Resource",
    "aws:asset:path": "asset.77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "EventsEventBridgeHandlerServiceRole95EF45A2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/EventsEventBridgeHandler/ServiceRole/Resource"
   }
  },
  "EventsEventBridgeHandlerServiceRoleDefaultPolicy2269BC7F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EventDaysTable8D7DA33D",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "EventsTableD24865E5",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EventsTableD24865E5",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": "events:PutEvents",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EventsEventBridgeHandlerServiceRoleDefaultPolicy2269BC7F",
    "Roles": [
     {
      "Ref": "EventsEventBridgeHandlerServiceRole95EF45A2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/EventsEventBridgeHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "EventsEventBridgeHandler223AFA40": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b.zip"
    },
    "Description": "Events domain EventBridge handler - v2",
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "CalisthenicsUserPoolE977672F"
      },
      "EVENTS_TABLE": {
       "Ref": "EventsTableD24865E5"
      },
      "EVENT_DAYS_TABLE": {
       "Ref": "EventDaysTable8D7DA33D"
      },
      "EVENT_BUS_NAME": "default"
     }
    },
    "Handler": "events-eventbridge-handler.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "EventsEventBridgeHandlerServiceRole95EF45A2",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "EventsEventBridgeHandlerServiceRoleDefaultPolicy2269BC7F",
    "EventsEventBridgeHandlerServiceRole95EF45A2"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/EventsEventBridgeHandler/Resource",
    "aws:asset:path": "asset.77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "AthletesEventBridgeHandlerServiceRole1A2612D8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/AthletesEventBridgeHandler/ServiceRole/Resource"
   }
  },
  "AthletesEventBridgeHandlerServiceRoleDefaultPolicyD1D54CBB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AthleteEventsTableBA7B788A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "AthletesTableF6FEDE0B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AthleteEventsTableBA7B788A",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": "events:PutEvents",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AthletesEventBridgeHandlerServiceRoleDefaultPolicyD1D54CBB",
    "Roles": [
     {
      "Ref": "AthletesEventBridgeHandlerServiceRole1A2612D8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/AthletesEventBridgeHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AthletesEventBridgeHandler0D39869F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b.zip"
    },
    "Description": "Athletes domain EventBridge handler - v1",
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "CalisthenicsUserPoolE977672F"
      },
      "ATHLETES_TABLE": {
       "Ref": "AthletesTableF6FEDE0B"
      },
      "ATHLETE_EVENTS_TABLE": {
       "Ref": "AthleteEventsTableBA7B788A"
      },
      "EVENT_BUS_NAME": "default"
     }
    },
    "Handler": "athletes-eventbridge-handler.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "AthletesEventBridgeHandlerServiceRole1A2612D8",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "AthletesEventBridgeHandlerServiceRoleDefaultPolicyD1D54CBB",
    "AthletesEventBridgeHandlerServiceRole1A2612D8"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/AthletesEventBridgeHandler/Resource",
    "aws:asset:path": "asset.77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CategoriesEventBridgeHandlerServiceRole3B1305B5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CategoriesEventBridgeHandler/ServiceRole/Resource"
   }
  },
  "CategoriesEventBridgeHandlerServiceRoleDefaultPolicyCD4A7126": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "CategoriesTable9FFF5A67",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": "events:PutEvents",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CategoriesEventBridgeHandlerServiceRoleDefaultPolicyCD4A7126",
    "Roles": [
     {
      "Ref": "CategoriesEventBridgeHandlerServiceRole3B1305B5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CategoriesEventBridgeHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CategoriesEventBridgeHandlerEAF4EC7D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b.zip"
    },
    "Description": "Categories domain EventBridge handler - v1",
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "CalisthenicsUserPoolE977672F"
      },
      "CATEGORIES_TABLE": {
       "Ref": "CategoriesTable9FFF5A67"
      },
      "EVENT_BUS_NAME": "default"
     }
    },
    "Handler": "categories-eventbridge-handler.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "CategoriesEventBridgeHandlerServiceRole3B1305B5",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "CategoriesEventBridgeHandlerServiceRoleDefaultPolicyCD4A7126",
    "CategoriesEventBridgeHandlerServiceRole3B1305B5"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CategoriesEventBridgeHandler/Resource",
    "aws:asset:path": "asset.77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "WodsEventBridgeHandlerServiceRoleAEBDFD6C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/WodsEventBridgeHandler/ServiceRole/Resource"
   }
  },
  "WodsEventBridgeHandlerServiceRoleDefaultPolicyFFA00824": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "WodsTableFA80581A",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": "events:PutEvents",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "WodsEventBridgeHandlerServiceRoleDefaultPolicyFFA00824",
    "Roles": [
     {
      "Ref": "WodsEventBridgeHandlerServiceRoleAEBDFD6C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/WodsEventBridgeHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "WodsEventBridgeHandler0D55AFDD": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b.zip"
    },
    "Description": "WODs domain EventBridge handler - v1",
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "CalisthenicsUserPoolE977672F"
      },
      "WODS_TABLE": {
       "Ref": "WodsTableFA80581A"
      },
      "EVENT_BUS_NAME": "default"
     }
    },
    "Handler": "wods-eventbridge-handler.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "WodsEventBridgeHandlerServiceRoleAEBDFD6C",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "WodsEventBridgeHandlerServiceRoleDefaultPolicyFFA00824",
    "WodsEventBridgeHandlerServiceRoleAEBDFD6C"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/WodsEventBridgeHandler/Resource",
    "aws:asset:path": "asset.77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "EventDataRequestRuleA5613574": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventBusName": "default",
    "EventPattern": {
     "source": [
      "scheduler.orchestrator"
     ],
     "detail-type": [
      "Event Data Requested"
     ]
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "EventsEventBridgeHandler223AFA40",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/EventDataRequestRule/Resource"
   }
  },
  "EventDataRequestRuleAllowEventRuleCalisthenicsAppStackEventsEventBridgeHandlerF05BE70DC5A3A5A2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EventsEventBridgeHandler223AFA40",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "EventDataRequestRuleA5613574",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/EventDataRequestRule/AllowEventRuleCalisthenicsAppStackEventsEventBridgeHandlerF05BE70D"
   }
  },
  "AthletesDataRequestRuleDC25AF56": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventBusName": "default",
    "EventPattern": {
     "source": [
      "scheduler.orchestrator"
     ],
     "detail-type": [
      "Athletes Data Requested"
     ]
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "AthletesEventBridgeHandler0D39869F",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/AthletesDataRequestRule/Resource"
   }
  },
  "AthletesDataRequestRuleAllowEventRuleCalisthenicsAppStackAthletesEventBridgeHandler760A1A44D102C664": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AthletesEventBridgeHandler0D39869F",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "AthletesDataRequestRuleDC25AF56",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/AthletesDataRequestRule/AllowEventRuleCalisthenicsAppStackAthletesEventBridgeHandler760A1A44"
   }
  },
  "CategoriesDataRequestRuleF9457BC6": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventBusName": "default",
    "EventPattern": {
     "source": [
      "scheduler.orchestrator"
     ],
     "detail-type": [
      "Categories Data Requested"
     ]
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "CategoriesEventBridgeHandlerEAF4EC7D",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CategoriesDataRequestRule/Resource"
   }
  },
  "CategoriesDataRequestRuleAllowEventRuleCalisthenicsAppStackCategoriesEventBridgeHandler8DFCEEF09C8F02F2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CategoriesEventBridgeHandlerEAF4EC7D",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "CategoriesDataRequestRuleF9457BC6",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CategoriesDataRequestRule/AllowEventRuleCalisthenicsAppStackCategoriesEventBridgeHandler8DFCEEF0"
   }
  },
  "WodsDataRequestRule873EC482": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventBusName": "default",
    "EventPattern": {
     "source": [
      "scheduler.orchestrator"
     ],
     "detail-type": [
      "WODs Data Requested"
     ]
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "WodsEventBridgeHandler0D55AFDD",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/WodsDataRequestRule/Resource"
   }
  },
  "WodsDataRequestRuleAllowEventRuleCalisthenicsAppStackWodsEventBridgeHandlerE2783F987160F3D7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WodsEventBridgeHandler0D55AFDD",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "WodsDataRequestRule873EC482",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/WodsDataRequestRule/AllowEventRuleCalisthenicsAppStackWodsEventBridgeHandlerE2783F98"
   }
  },
  "DomainResponsesRuleD9566F41": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventBusName": "default",
    "EventPattern": {
     "source": [
      "events.domain",
      "athletes.domain",
      "categories.domain",
      "wods.domain"
     ],
     "detail-type": [
      "Event Data Response",
      "Athletes Data Response",
      "Categories Data Response",
      "WODs Data Response"
     ]
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "SchedulerLambdaBF444921",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/DomainResponsesRule/Resource"
   }
  },
  "DomainResponsesRuleAllowEventRuleCalisthenicsAppStackSchedulerLambda2958EF5546431538": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SchedulerLambdaBF444921",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "DomainResponsesRuleD9566F41",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/DomainResponsesRule/AllowEventRuleCalisthenicsAppStackSchedulerLambda2958EF55"
   }
  },
  "LeaderboardCalculatorLambdaFunctionServiceRoleCBBE86D7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":logs:",
            {
             "Ref": "AWS::Region"
            },
            ":",
            {
             "Ref": "AWS::AccountId"
            },
            ":log-group:/aws/lambda/*"
           ]
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "LambdaFunctionServiceRolePolicy"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/LeaderboardCalculator/LambdaFunctionServiceRole/Resource",
    "guard": {
     "SuppressedRules": [
      "IAM_NO_INLINE_POLICY_CHECK"
     ]
    }
   }
  },
  "LeaderboardCalculatorLambdaFunctionServiceRoleDefaultPolicy3E080D1B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTelemetryRecords",
        "xray:PutTraceSegments"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AthletesTableF6FEDE0B",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "EventsTableD24865E5",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ScoresTable6CB35494",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EventsTableD24865E5",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ScoresTable6CB35494",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LeaderboardCalculatorLambdaFunctionServiceRoleDefaultPolicy3E080D1B",
    "Roles": [
     {
      "Ref": "LeaderboardCalculatorLambdaFunctionServiceRoleCBBE86D7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/LeaderboardCalculator/LambdaFunctionServiceRole/DefaultPolicy/Resource",
    "cfn_nag": {
     "rules_to_suppress": [
      {
       "id": "W12",
       "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
      }
     ]
    }
   }
  },
  "LeaderboardCalculatorLambdaFunction571E8235": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-571340586587-us-east-2",
     "S3Key": "77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b.zip"
    },
    "Environment": {
     "Variables": {
      "SCORES_TABLE": {
       "Ref": "ScoresTable6CB35494"
      },
      "ATHLETES_TABLE": {
       "Ref": "AthletesTableF6FEDE0B"
      },
      "EVENTS_TABLE": {
       "Ref": "EventsTableD24865E5"
      }
     }
    },
    "Handler": "leaderboard-calculator.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "LeaderboardCalculatorLambdaFunctionServiceRoleCBBE86D7",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 300,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "LeaderboardCalculatorLambdaFunctionServiceRoleDefaultPolicy3E080D1B",
    "LeaderboardCalculatorLambdaFunctionServiceRoleCBBE86D7"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/LeaderboardCalculator/LambdaFunction/Resource",
    "aws:asset:path": "asset.77d53e9b44b5b419baafffe6f864ddd2f7b96c65679d9947b56a1994c1ec172b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code",
    "cfn_nag": {
     "rules_to_suppress": [
      {
       "id": "W58",
       "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
      },
      {
       "id": "W89",
       "reason": "This is not a rule for the general case, just for specific use cases/industries"
      },
      {
       "id": "W92",
       "reason": "Impossible for us to define the correct concurrency for clients"
      }
     ]
    }
   }
  },
  "LeaderboardCalculatorLambdaFunctionAwsEventsLambdaInvokePermission1DEF21D1E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LeaderboardCalculatorLambdaFunction571E8235",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "LeaderboardCalculatorEventsRule60BD3B67",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/LeaderboardCalculator/LambdaFunction/AwsEventsLambdaInvokePermission-1"
   }
  },
  "LeaderboardCalculatorEventsRule60BD3B67": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "source": [
      "calisthenics.scores"
     ],
     "detail-type": [
      "Score Updated",
      "Score Created"
     ]
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "LeaderboardCalculatorLambdaFunction571E8235",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/LeaderboardCalculator/EventsRule/Resource"
   }
  },
  "CalisthenicsApi2737E551": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "Calisthenics Competition API"
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Resource"
   }
  },
  "CalisthenicsApiDeploymentB286B780366a71a0e6d4614f176dc4bbd7ef6707": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "DependsOn": [
    "CalisthenicsApianalyticsGET349DAFE5",
    "CalisthenicsApianalyticsOPTIONSBC91777C",
    "CalisthenicsApianalytics53130288",
    "CalisthenicsApiathletesproxyANYB4C958A1",
    "CalisthenicsApiathletesproxyOPTIONS4CA8417B",
    "CalisthenicsApiathletesproxy658B2488",
    "CalisthenicsApiathletesANY955A1D09",
    "CalisthenicsApiathletesOPTIONS485312E0",
    "CalisthenicsApiathletesF24639A1",
    "CalisthenicsApicategoriesproxyANY7BB261F1",
    "CalisthenicsApicategoriesproxyOPTIONS9CB052BF",
    "CalisthenicsApicategoriesproxyE641EAEA",
    "CalisthenicsApicategoriesANY285E8FA1",
    "CalisthenicsApicategoriesOPTIONS429387CF",
    "CalisthenicsApicategories21557EC7",
    "CalisthenicsApicompetitionsproxyANYFF61677E",
    "CalisthenicsApicompetitionsproxyOPTIONSA13738CF",
    "CalisthenicsApicompetitionsproxy2DB1566E",
    "CalisthenicsApicompetitionsANYED20BE8D",
    "CalisthenicsApicompetitionsOPTIONSBE963C10",
    "CalisthenicsApicompetitions42D52271",
    "CalisthenicsApieventsproxyANY33524FC2",
    "CalisthenicsApieventsproxyOPTIONSD32E8F94",
    "CalisthenicsApieventsproxy5860155C",
    "CalisthenicsApieventsANY583D70E3",
    "CalisthenicsApieventsOPTIONS6433CC63",
    "CalisthenicsApievents72571DAE",
    "CalisthenicsApimeproxyANYDDEE4AC5",
    "CalisthenicsApimeproxyOPTIONS5B43E451",
    "CalisthenicsApimeproxy218183CD",
    "CalisthenicsApimeANY51966358",
    "CalisthenicsApimeOPTIONSE0F35B81",
    "CalisthenicsApimeE370A441",
    "CalisthenicsApiOPTIONS6AEE05F2",
    "CalisthenicsApiorganizationsproxyANYCD978EE5",
    "CalisthenicsApiorganizationsproxyOPTIONSD8A50E0F",
    "CalisthenicsApiorganizationsproxy7845411D",
    "CalisthenicsApiorganizationsANY971B2B14",
    "CalisthenicsApiorganizationsOPTIONS25A6C94A",
    "CalisthenicsApiorganizations0E261AA2",
    "CalisthenicsApipubliceventsproxyGET2D46321C",
    "CalisthenicsApipubliceventsproxyOPTIONSF5605613",
    "CalisthenicsApipubliceventsproxyF7B46FF6",
    "CalisthenicsApipubliceventsGET8D770C46",
    "CalisthenicsApipubliceventsOPTIONS56E322C1",
    "CalisthenicsApipublicevents814045AD",
    "CalisthenicsApipublicOPTIONSD980687E",
    "CalisthenicsApipublicFB6799A9",
    "CalisthenicsApipublicschedulesproxyGET75BF3B72",
    "CalisthenicsApipublicschedulesproxyOPTIONS3C7D00C0",
    "CalisthenicsApipublicschedulesproxy050FD585",
    "CalisthenicsApipublicschedulesGETDDB94115",
    "CalisthenicsApipublicschedulesOPTIONS75C54EBB",
    "CalisthenicsApipublicschedulesE529D7FA",
    "CalisthenicsApischedulerproxyANY95ACD2A8",
    "CalisthenicsApischedulerproxyOPTIONS3B0A4DB5",
    "CalisthenicsApischedulerproxy4B50FF57",
    "CalisthenicsApischedulerANYBDE4E836",
    "CalisthenicsApischedulerOPTIONS360AEA05",
    "CalisthenicsApischedulerF3ECAC74",
    "CalisthenicsApiscoresproxyANY4E1EABA8",
    "CalisthenicsApiscoresproxyOPTIONSFA045358",
    "CalisthenicsApiscoresproxy4E43A498",
    "CalisthenicsApiscoresANYDC8D1A2D",
    "CalisthenicsApiscoresOPTIONS543EBFDF",
    "CalisthenicsApiscores2D58F28B",
    "CalisthenicsApisessionsproxyANYEC9D2BFA",
    "CalisthenicsApisessionsproxyOPTIONS07F04108",
    "CalisthenicsApisessionsproxy80B9FA3B",
    "CalisthenicsApisessionsANY1B3D1C03",
    "CalisthenicsApisessionsOPTIONS4592A9B4",
    "CalisthenicsApisessions62C17B5F",
    "CalisthenicsApiusersproxyANY1FD83EB4",
    "CalisthenicsApiusersproxyOPTIONSA817AAF9",
    "CalisthenicsApiusersproxy1EEB4D23",
    "CalisthenicsApiusersANY6FC5A162",
    "CalisthenicsApiusersOPTIONSBF259F07",
    "CalisthenicsApiusers8D837F4E",
    "CalisthenicsApiwodsproxyANY1A8D8671",
    "CalisthenicsApiwodsproxyOPTIONS54E9A516",
    "CalisthenicsApiwodsproxy2790C318",
    "CalisthenicsApiwodsANY6B16448B",
    "CalisthenicsApiwodsOPTIONS8C632DDA",
    "CalisthenicsApiwods678AA5DD"
   ],
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Deployment/Resource",
    "aws:cdk:do-not-refactor": true
   }
  },
  "CalisthenicsApiDeploymentStageprod0842EBBE": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "CalisthenicsApiDeploymentB286B780366a71a0e6d4614f176dc4bbd7ef6707"
    },
    "MethodSettings": [
     {
      "DataTraceEnabled": true,
      "HttpMethod": "*",
      "LoggingLevel": "INFO",
      "MetricsEnabled": true,
      "ResourcePath": "/*",
      "ThrottlingBurstLimit": 100,
      "ThrottlingRateLimit": 50
     }
    ],
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/DeploymentStage.prod/Resource"
   }
  },
  "CalisthenicsApiOPTIONS6AEE05F2": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "CalisthenicsApi2737E551",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/OPTIONS/Resource"
   }
  },
  "CalisthenicsApipublicFB6799A9": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CalisthenicsApi2737E551",
      "RootResourceId"
     ]
    },
    "PathPart": "public",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/Resource"
   }
  },
  "CalisthenicsApipublicOPTIONSD980687E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApipublicFB6799A9"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/OPTIONS/Resource"
   }
  },
  "CalisthenicsApipublicevents814045AD": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CalisthenicsApipublicFB6799A9"
    },
    "PathPart": "events",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/events/Resource"
   }
  },
  "CalisthenicsApipubliceventsOPTIONS56E322C1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApipublicevents814045AD"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/events/OPTIONS/Resource"
   }
  },
  "CalisthenicsApipubliceventsGETApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57GETpubliceventsA27FB772": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CompetitionsLambda2E373F68",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/GET/public/events"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/events/GET/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.GET..public.events"
   }
  },
  "CalisthenicsApipubliceventsGETApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57GETpubliceventsEEB06197": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CompetitionsLambda2E373F68",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/GET/public/events"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/events/GET/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.GET..public.events"
   }
  },
  "CalisthenicsApipubliceventsGET8D770C46": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CompetitionsLambda2E373F68",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApipublicevents814045AD"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/events/GET/Resource"
   }
  },
  "CalisthenicsApipubliceventsproxyF7B46FF6": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CalisthenicsApipublicevents814045AD"
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/events/{proxy+}/Resource"
   }
  },
  "CalisthenicsApipubliceventsproxyOPTIONSF5605613": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApipubliceventsproxyF7B46FF6"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/events/{proxy+}/OPTIONS/Resource"
   }
  },
  "CalisthenicsApipubliceventsproxyGETApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57GETpubliceventsproxy82C4B8FF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CompetitionsLambda2E373F68",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/GET/public/events/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/events/{proxy+}/GET/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.GET..public.events.{proxy+}"
   }
  },
  "CalisthenicsApipubliceventsproxyGETApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57GETpubliceventsproxyC5316CBA": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CompetitionsLambda2E373F68",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/GET/public/events/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/events/{proxy+}/GET/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.GET..public.events.{proxy+}"
   }
  },
  "CalisthenicsApipubliceventsproxyGET2D46321C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CompetitionsLambda2E373F68",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApipubliceventsproxyF7B46FF6"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/events/{proxy+}/GET/Resource"
   }
  },
  "CalisthenicsApipublicschedulesE529D7FA": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CalisthenicsApipublicFB6799A9"
    },
    "PathPart": "schedules",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/schedules/Resource"
   }
  },
  "CalisthenicsApipublicschedulesOPTIONS75C54EBB": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApipublicschedulesE529D7FA"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/schedules/OPTIONS/Resource"
   }
  },
  "CalisthenicsApipublicschedulesGETApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57GETpublicschedules75560C27": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PublicSchedulesLambda73E7914B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/GET/public/schedules"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/schedules/GET/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.GET..public.schedules"
   }
  },
  "CalisthenicsApipublicschedulesGETApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57GETpublicschedulesCA03E880": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PublicSchedulesLambda73E7914B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/GET/public/schedules"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/schedules/GET/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.GET..public.schedules"
   }
  },
  "CalisthenicsApipublicschedulesGETDDB94115": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "PublicSchedulesLambda73E7914B",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApipublicschedulesE529D7FA"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/schedules/GET/Resource"
   }
  },
  "CalisthenicsApipublicschedulesproxy050FD585": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CalisthenicsApipublicschedulesE529D7FA"
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/schedules/{proxy+}/Resource"
   }
  },
  "CalisthenicsApipublicschedulesproxyOPTIONS3C7D00C0": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApipublicschedulesproxy050FD585"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/schedules/{proxy+}/OPTIONS/Resource"
   }
  },
  "CalisthenicsApipublicschedulesproxyGETApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57GETpublicschedulesproxy7D66CCFC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PublicSchedulesLambda73E7914B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/GET/public/schedules/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/schedules/{proxy+}/GET/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.GET..public.schedules.{proxy+}"
   }
  },
  "CalisthenicsApipublicschedulesproxyGETApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57GETpublicschedulesproxy6286C903": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PublicSchedulesLambda73E7914B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/GET/public/schedules/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/schedules/{proxy+}/GET/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.GET..public.schedules.{proxy+}"
   }
  },
  "CalisthenicsApipublicschedulesproxyGET75BF3B72": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "PublicSchedulesLambda73E7914B",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApipublicschedulesproxy050FD585"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/public/schedules/{proxy+}/GET/Resource"
   }
  },
  "CalisthenicsApicompetitions42D52271": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CalisthenicsApi2737E551",
      "RootResourceId"
     ]
    },
    "PathPart": "competitions",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/competitions/Resource"
   }
  },
  "CalisthenicsApicompetitionsOPTIONSBE963C10": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApicompetitions42D52271"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/competitions/OPTIONS/Resource"
   }
  },
  "CalisthenicsApicompetitionsANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYcompetitions38FFA4AC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CompetitionsLambda2E373F68",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/competitions"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/competitions/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..competitions"
   }
  },
  "CalisthenicsApicompetitionsANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYcompetitions9FFBDB77": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CompetitionsLambda2E373F68",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/competitions"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/competitions/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..competitions"
   }
  },
  "CalisthenicsApicompetitionsANYED20BE8D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CompetitionsLambda2E373F68",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApicompetitions42D52271"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/competitions/ANY/Resource"
   }
  },
  "CalisthenicsApicompetitionsproxy2DB1566E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CalisthenicsApicompetitions42D52271"
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/competitions/{proxy+}/Resource"
   }
  },
  "CalisthenicsApicompetitionsproxyOPTIONSA13738CF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApicompetitionsproxy2DB1566E"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/competitions/{proxy+}/OPTIONS/Resource"
   }
  },
  "CalisthenicsApicompetitionsproxyANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYcompetitionsproxyF4B4B3DD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CompetitionsLambda2E373F68",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/competitions/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/competitions/{proxy+}/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..competitions.{proxy+}"
   }
  },
  "CalisthenicsApicompetitionsproxyANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYcompetitionsproxyEA7EA930": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CompetitionsLambda2E373F68",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/competitions/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/competitions/{proxy+}/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..competitions.{proxy+}"
   }
  },
  "CalisthenicsApicompetitionsproxyANYFF61677E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CompetitionsLambda2E373F68",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApicompetitionsproxy2DB1566E"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/competitions/{proxy+}/ANY/Resource"
   }
  },
  "CalisthenicsApiorganizations0E261AA2": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CalisthenicsApi2737E551",
      "RootResourceId"
     ]
    },
    "PathPart": "organizations",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/organizations/Resource"
   }
  },
  "CalisthenicsApiorganizationsOPTIONS25A6C94A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApiorganizations0E261AA2"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/organizations/OPTIONS/Resource"
   }
  },
  "CalisthenicsApiorganizationsANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYorganizations74C7DF41": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OrganizationsLambdaF8714A36",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/organizations"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/organizations/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..organizations"
   }
  },
  "CalisthenicsApiorganizationsANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYorganizations4AB98246": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OrganizationsLambdaF8714A36",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/organizations"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/organizations/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..organizations"
   }
  },
  "CalisthenicsApiorganizationsANY971B2B14": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "OrganizationsLambdaF8714A36",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApiorganizations0E261AA2"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/organizations/ANY/Resource"
   }
  },
  "CalisthenicsApiorganizationsproxy7845411D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CalisthenicsApiorganizations0E261AA2"
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/organizations/{proxy+}/Resource"
   }
  },
  "CalisthenicsApiorganizationsproxyOPTIONSD8A50E0F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApiorganizationsproxy7845411D"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/organizations/{proxy+}/OPTIONS/Resource"
   }
  },
  "CalisthenicsApiorganizationsproxyANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYorganizationsproxy5C1D0DC9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OrganizationsLambdaF8714A36",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/organizations/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/organizations/{proxy+}/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..organizations.{proxy+}"
   }
  },
  "CalisthenicsApiorganizationsproxyANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYorganizationsproxy733676A9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OrganizationsLambdaF8714A36",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/organizations/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/organizations/{proxy+}/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..organizations.{proxy+}"
   }
  },
  "CalisthenicsApiorganizationsproxyANYCD978EE5": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "OrganizationsLambdaF8714A36",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApiorganizationsproxy7845411D"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/organizations/{proxy+}/ANY/Resource"
   }
  },
  "CalisthenicsApievents72571DAE": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CalisthenicsApi2737E551",
      "RootResourceId"
     ]
    },
    "PathPart": "events",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/events/Resource"
   }
  },
  "CalisthenicsApieventsOPTIONS6433CC63": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApievents72571DAE"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/events/OPTIONS/Resource"
   }
  },
  "CalisthenicsApieventsANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYevents5578A539": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EventsLambdaE6050439",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/events"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/events/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..events"
   }
  },
  "CalisthenicsApieventsANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYevents882BA84C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EventsLambdaE6050439",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/events"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/events/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..events"
   }
  },
  "CalisthenicsApieventsANY583D70E3": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "EventsLambdaE6050439",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApievents72571DAE"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/events/ANY/Resource"
   }
  },
  "CalisthenicsApieventsproxy5860155C": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CalisthenicsApievents72571DAE"
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/events/{proxy+}/Resource"
   }
  },
  "CalisthenicsApieventsproxyOPTIONSD32E8F94": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApieventsproxy5860155C"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/events/{proxy+}/OPTIONS/Resource"
   }
  },
  "CalisthenicsApieventsproxyANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYeventsproxy377676C7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EventsLambdaE6050439",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/events/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/events/{proxy+}/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..events.{proxy+}"
   }
  },
  "CalisthenicsApieventsproxyANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYeventsproxyC6EDCC9C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EventsLambdaE6050439",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/events/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/events/{proxy+}/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..events.{proxy+}"
   }
  },
  "CalisthenicsApieventsproxyANY33524FC2": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "EventsLambdaE6050439",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApieventsproxy5860155C"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/events/{proxy+}/ANY/Resource"
   }
  },
  "CalisthenicsApiscores2D58F28B": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CalisthenicsApi2737E551",
      "RootResourceId"
     ]
    },
    "PathPart": "scores",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/scores/Resource"
   }
  },
  "CalisthenicsApiscoresOPTIONS543EBFDF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApiscores2D58F28B"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/scores/OPTIONS/Resource"
   }
  },
  "CalisthenicsApiscoresANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYscores6763AFF3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ScoresLambdaB9950DB3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/scores"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/scores/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..scores"
   }
  },
  "CalisthenicsApiscoresANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYscoresB091AAF1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ScoresLambdaB9950DB3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/scores"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/scores/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..scores"
   }
  },
  "CalisthenicsApiscoresANYDC8D1A2D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ScoresLambdaB9950DB3",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApiscores2D58F28B"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/scores/ANY/Resource"
   }
  },
  "CalisthenicsApiscoresproxy4E43A498": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CalisthenicsApiscores2D58F28B"
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/scores/{proxy+}/Resource"
   }
  },
  "CalisthenicsApiscoresproxyOPTIONSFA045358": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApiscoresproxy4E43A498"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/scores/{proxy+}/OPTIONS/Resource"
   }
  },
  "CalisthenicsApiscoresproxyANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYscoresproxy392F5B18": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ScoresLambdaB9950DB3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/scores/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/scores/{proxy+}/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..scores.{proxy+}"
   }
  },
  "CalisthenicsApiscoresproxyANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYscoresproxy9A91D283": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ScoresLambdaB9950DB3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/scores/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/scores/{proxy+}/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..scores.{proxy+}"
   }
  },
  "CalisthenicsApiscoresproxyANY4E1EABA8": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ScoresLambdaB9950DB3",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApiscoresproxy4E43A498"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/scores/{proxy+}/ANY/Resource"
   }
  },
  "CalisthenicsApicategories21557EC7": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CalisthenicsApi2737E551",
      "RootResourceId"
     ]
    },
    "PathPart": "categories",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/categories/Resource"
   }
  },
  "CalisthenicsApicategoriesOPTIONS429387CF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApicategories21557EC7"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/categories/OPTIONS/Resource"
   }
  },
  "CalisthenicsApicategoriesANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYcategoriesD1620154": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CategoriesLambda193BF92F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/categories"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/categories/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..categories"
   }
  },
  "CalisthenicsApicategoriesANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYcategories34993768": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CategoriesLambda193BF92F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/categories"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/categories/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..categories"
   }
  },
  "CalisthenicsApicategoriesANY285E8FA1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CategoriesLambda193BF92F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApicategories21557EC7"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/categories/ANY/Resource"
   }
  },
  "CalisthenicsApicategoriesproxyE641EAEA": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CalisthenicsApicategories21557EC7"
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/categories/{proxy+}/Resource"
   }
  },
  "CalisthenicsApicategoriesproxyOPTIONS9CB052BF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApicategoriesproxyE641EAEA"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/categories/{proxy+}/OPTIONS/Resource"
   }
  },
  "CalisthenicsApicategoriesproxyANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYcategoriesproxy152D2815": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CategoriesLambda193BF92F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/categories/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/categories/{proxy+}/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..categories.{proxy+}"
   }
  },
  "CalisthenicsApicategoriesproxyANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYcategoriesproxy66230325": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CategoriesLambda193BF92F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/categories/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/categories/{proxy+}/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..categories.{proxy+}"
   }
  },
  "CalisthenicsApicategoriesproxyANY7BB261F1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CategoriesLambda193BF92F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApicategoriesproxyE641EAEA"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/categories/{proxy+}/ANY/Resource"
   }
  },
  "CalisthenicsApiwods678AA5DD": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CalisthenicsApi2737E551",
      "RootResourceId"
     ]
    },
    "PathPart": "wods",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/wods/Resource"
   }
  },
  "CalisthenicsApiwodsOPTIONS8C632DDA": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApiwods678AA5DD"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/wods/OPTIONS/Resource"
   }
  },
  "CalisthenicsApiwodsANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYwods0A8DABD2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WodsLambda91396CAF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/wods"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/wods/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..wods"
   }
  },
  "CalisthenicsApiwodsANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYwods7B1325D5": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WodsLambda91396CAF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/wods"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/wods/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..wods"
   }
  },
  "CalisthenicsApiwodsANY6B16448B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "WodsLambda91396CAF",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApiwods678AA5DD"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/wods/ANY/Resource"
   }
  },
  "CalisthenicsApiwodsproxy2790C318": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CalisthenicsApiwods678AA5DD"
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/wods/{proxy+}/Resource"
   }
  },
  "CalisthenicsApiwodsproxyOPTIONS54E9A516": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApiwodsproxy2790C318"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/wods/{proxy+}/OPTIONS/Resource"
   }
  },
  "CalisthenicsApiwodsproxyANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYwodsproxy2B45A060": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WodsLambda91396CAF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/wods/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/wods/{proxy+}/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..wods.{proxy+}"
   }
  },
  "CalisthenicsApiwodsproxyANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYwodsproxy26AA88EF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WodsLambda91396CAF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/wods/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/wods/{proxy+}/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..wods.{proxy+}"
   }
  },
  "CalisthenicsApiwodsproxyANY1A8D8671": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "WodsLambda91396CAF",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApiwodsproxy2790C318"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/wods/{proxy+}/ANY/Resource"
   }
  },
  "CalisthenicsApimeE370A441": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CalisthenicsApi2737E551",
      "RootResourceId"
     ]
    },
    "PathPart": "me",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/me/Resource"
   }
  },
  "CalisthenicsApimeOPTIONSE0F35B81": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApimeE370A441"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/me/OPTIONS/Resource"
   }
  },
  "CalisthenicsApimeANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYmeDC9FD102": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UsersLambda3F4CC07E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/me"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/me/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..me"
   }
  },
  "CalisthenicsApimeANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYme3AD944C3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UsersLambda3F4CC07E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/me"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/me/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..me"
   }
  },
  "CalisthenicsApimeANY51966358": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "UsersLambda3F4CC07E",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApimeE370A441"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/me/ANY/Resource"
   }
  },
  "CalisthenicsApimeproxy218183CD": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CalisthenicsApimeE370A441"
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/me/{proxy+}/Resource"
   }
  },
  "CalisthenicsApimeproxyOPTIONS5B43E451": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApimeproxy218183CD"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/me/{proxy+}/OPTIONS/Resource"
   }
  },
  "CalisthenicsApimeproxyANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYmeproxy55D13060": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UsersLambda3F4CC07E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/me/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/me/{proxy+}/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..me.{proxy+}"
   }
  },
  "CalisthenicsApimeproxyANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYmeproxy5B885FD1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UsersLambda3F4CC07E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/me/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/me/{proxy+}/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..me.{proxy+}"
   }
  },
  "CalisthenicsApimeproxyANYDDEE4AC5": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "UsersLambda3F4CC07E",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApimeproxy218183CD"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/me/{proxy+}/ANY/Resource"
   }
  },
  "CalisthenicsApiusers8D837F4E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CalisthenicsApi2737E551",
      "RootResourceId"
     ]
    },
    "PathPart": "users",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/users/Resource"
   }
  },
  "CalisthenicsApiusersOPTIONSBF259F07": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApiusers8D837F4E"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/users/OPTIONS/Resource"
   }
  },
  "CalisthenicsApiusersANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYusers943B40FB": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UsersLambda3F4CC07E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/users"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/users/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..users"
   }
  },
  "CalisthenicsApiusersANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYusers28325092": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UsersLambda3F4CC07E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/users"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/users/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..users"
   }
  },
  "CalisthenicsApiusersANY6FC5A162": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "UsersLambda3F4CC07E",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApiusers8D837F4E"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/users/ANY/Resource"
   }
  },
  "CalisthenicsApiusersproxy1EEB4D23": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CalisthenicsApiusers8D837F4E"
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/users/{proxy+}/Resource"
   }
  },
  "CalisthenicsApiusersproxyOPTIONSA817AAF9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApiusersproxy1EEB4D23"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/users/{proxy+}/OPTIONS/Resource"
   }
  },
  "CalisthenicsApiusersproxyANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYusersproxy413CBDA2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UsersLambda3F4CC07E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/users/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/users/{proxy+}/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..users.{proxy+}"
   }
  },
  "CalisthenicsApiusersproxyANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYusersproxy54F91CA2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UsersLambda3F4CC07E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/users/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/users/{proxy+}/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..users.{proxy+}"
   }
  },
  "CalisthenicsApiusersproxyANY1FD83EB4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "UsersLambda3F4CC07E",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApiusersproxy1EEB4D23"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/users/{proxy+}/ANY/Resource"
   }
  },
  "CalisthenicsApiathletesF24639A1": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CalisthenicsApi2737E551",
      "RootResourceId"
     ]
    },
    "PathPart": "athletes",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/athletes/Resource"
   }
  },
  "CalisthenicsApiathletesOPTIONS485312E0": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApiathletesF24639A1"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/athletes/OPTIONS/Resource"
   }
  },
  "CalisthenicsApiathletesANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYathletesF088AA57": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UsersLambda3F4CC07E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/athletes"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/athletes/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..athletes"
   }
  },
  "CalisthenicsApiathletesANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYathletesECF46B4D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UsersLambda3F4CC07E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/athletes"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/athletes/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..athletes"
   }
  },
  "CalisthenicsApiathletesANY955A1D09": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "UsersLambda3F4CC07E",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApiathletesF24639A1"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/athletes/ANY/Resource"
   }
  },
  "CalisthenicsApiathletesproxy658B2488": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CalisthenicsApiathletesF24639A1"
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/athletes/{proxy+}/Resource"
   }
  },
  "CalisthenicsApiathletesproxyOPTIONS4CA8417B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApiathletesproxy658B2488"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/athletes/{proxy+}/OPTIONS/Resource"
   }
  },
  "CalisthenicsApiathletesproxyANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYathletesproxy1B93518C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UsersLambda3F4CC07E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/athletes/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/athletes/{proxy+}/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..athletes.{proxy+}"
   }
  },
  "CalisthenicsApiathletesproxyANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYathletesproxyCEF21243": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UsersLambda3F4CC07E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/athletes/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/athletes/{proxy+}/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..athletes.{proxy+}"
   }
  },
  "CalisthenicsApiathletesproxyANYB4C958A1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "UsersLambda3F4CC07E",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApiathletesproxy658B2488"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/athletes/{proxy+}/ANY/Resource"
   }
  },
  "CalisthenicsApisessions62C17B5F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CalisthenicsApi2737E551",
      "RootResourceId"
     ]
    },
    "PathPart": "sessions",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/sessions/Resource"
   }
  },
  "CalisthenicsApisessionsOPTIONS4592A9B4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApisessions62C17B5F"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/sessions/OPTIONS/Resource"
   }
  },
  "CalisthenicsApisessionsANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYsessions3403B1CD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SessionsLambda02CB2700",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/sessions"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/sessions/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..sessions"
   }
  },
  "CalisthenicsApisessionsANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYsessions0E5B8B2B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SessionsLambda02CB2700",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/sessions"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/sessions/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..sessions"
   }
  },
  "CalisthenicsApisessionsANY1B3D1C03": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "SessionsLambda02CB2700",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApisessions62C17B5F"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/sessions/ANY/Resource"
   }
  },
  "CalisthenicsApisessionsproxy80B9FA3B": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CalisthenicsApisessions62C17B5F"
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/sessions/{proxy+}/Resource"
   }
  },
  "CalisthenicsApisessionsproxyOPTIONS07F04108": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApisessionsproxy80B9FA3B"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/sessions/{proxy+}/OPTIONS/Resource"
   }
  },
  "CalisthenicsApisessionsproxyANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYsessionsproxy5AA4DA56": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SessionsLambda02CB2700",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/sessions/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/sessions/{proxy+}/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..sessions.{proxy+}"
   }
  },
  "CalisthenicsApisessionsproxyANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYsessionsproxy9F5E3850": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SessionsLambda02CB2700",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/sessions/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/sessions/{proxy+}/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..sessions.{proxy+}"
   }
  },
  "CalisthenicsApisessionsproxyANYEC9D2BFA": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "SessionsLambda02CB2700",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApisessionsproxy80B9FA3B"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/sessions/{proxy+}/ANY/Resource"
   }
  },
  "CalisthenicsApischedulerF3ECAC74": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CalisthenicsApi2737E551",
      "RootResourceId"
     ]
    },
    "PathPart": "scheduler",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/scheduler/Resource"
   }
  },
  "CalisthenicsApischedulerOPTIONS360AEA05": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApischedulerF3ECAC74"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/scheduler/OPTIONS/Resource"
   }
  },
  "CalisthenicsApischedulerANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYscheduler4A57740E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SchedulerLambdaBF444921",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/scheduler"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/scheduler/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..scheduler"
   }
  },
  "CalisthenicsApischedulerANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYscheduler60A23A13": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SchedulerLambdaBF444921",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/scheduler"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/scheduler/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..scheduler"
   }
  },
  "CalisthenicsApischedulerANYBDE4E836": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "SchedulerLambdaBF444921",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApischedulerF3ECAC74"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/scheduler/ANY/Resource"
   }
  },
  "CalisthenicsApischedulerproxy4B50FF57": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CalisthenicsApischedulerF3ECAC74"
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/scheduler/{proxy+}/Resource"
   }
  },
  "CalisthenicsApischedulerproxyOPTIONS3B0A4DB5": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApischedulerproxy4B50FF57"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/scheduler/{proxy+}/OPTIONS/Resource"
   }
  },
  "CalisthenicsApischedulerproxyANYApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57ANYschedulerproxyF3A7D438": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SchedulerLambdaBF444921",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/*/scheduler/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/scheduler/{proxy+}/ANY/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..scheduler.{proxy+}"
   }
  },
  "CalisthenicsApischedulerproxyANYApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57ANYschedulerproxy8E661042": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SchedulerLambdaBF444921",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/*/scheduler/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/scheduler/{proxy+}/ANY/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.ANY..scheduler.{proxy+}"
   }
  },
  "CalisthenicsApischedulerproxyANY95ACD2A8": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "SchedulerLambdaBF444921",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApischedulerproxy4B50FF57"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/scheduler/{proxy+}/ANY/Resource"
   }
  },
  "CalisthenicsApianalytics53130288": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CalisthenicsApi2737E551",
      "RootResourceId"
     ]
    },
    "PathPart": "analytics",
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/analytics/Resource"
   }
  },
  "CalisthenicsApianalyticsOPTIONSBC91777C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CalisthenicsApianalytics53130288"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/analytics/OPTIONS/Resource"
   }
  },
  "CalisthenicsApianalyticsGETApiPermissionCalisthenicsAppStackCalisthenicsApi48E52E57GETanalyticsE583C048": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AnalyticsLambda406A5DA6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/",
       {
        "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
       },
       "/GET/analytics"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/analytics/GET/ApiPermission.CalisthenicsAppStackCalisthenicsApi48E52E57.GET..analytics"
   }
  },
  "CalisthenicsApianalyticsGETApiPermissionTestCalisthenicsAppStackCalisthenicsApi48E52E57GETanalyticsAD1CDF03": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AnalyticsLambda406A5DA6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:571340586587:",
       {
        "Ref": "CalisthenicsApi2737E551"
       },
       "/test-invoke-stage/GET/analytics"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/analytics/GET/ApiPermission.Test.CalisthenicsAppStackCalisthenicsApi48E52E57.GET..analytics"
   }
  },
  "CalisthenicsApianalyticsGET349DAFE5": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CognitoAuthorizerF3215DBC"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AnalyticsLambda406A5DA6",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CalisthenicsApianalytics53130288"
    },
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CalisthenicsApi/Default/analytics/GET/Resource"
   }
  },
  "CognitoAuthorizerF3215DBC": {
   "Type": "AWS::ApiGateway::Authorizer",
   "Properties": {
    "IdentitySource": "method.request.header.Authorization",
    "Name": "CalisthenicsAppStackCognitoAuthorizer6C60335F",
    "ProviderARNs": [
     {
      "Fn::GetAtt": [
       "CalisthenicsUserPoolE977672F",
       "Arn"
      ]
     }
    ],
    "RestApiId": {
     "Ref": "CalisthenicsApi2737E551"
    },
    "Type": "COGNITO_USER_POOLS"
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CognitoAuthorizer/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21STW/bMAz9Lb0rapvu0ttSdwMGrGiQdOdClmmHjSwGIpUgE/zfB8nO4gI98ZHv8UOkljot7x/13Y058cI2+4XDWqetGLtX5sTvyVLnUUinPwxhTeRU1fr/+AIqh+BlTo2RQTVnb3pqap3eTO0gSwoYFD/o9BTtHkrehEazJof2fA1P/ug8GYZBWUexaQN50alq/WvADv3KWmCuyEsgp56RJWAdBcmr7cNXkqr1c9WgnOnrxuj0M3pb8qrWz/EaQo/MRYum12lD46OKvc49ovzId8MMwnqVjWKBQzvV43cxvGf9u/T85Y+0h88CndYmGOfAqa0YgRdjd+hLv7k/KDiCF9ZpE6dpYt6wOWBnBE7mrNMGWFYHLOQEn+Hg6NxPh5t5WzHdpUkHagNMMVjIi1cvIDtqMjmhCztVnvD4ay6fgVdRdhTwL4Qsu3rDMMuPLNR/Xe4TtQ50xAZCmaesNc+Jvss5r1EOUQb1+E3f3XzPv5rJlePywpJnCdEK32aiLK0O2HSwmO7+4xp6o/Eug/LUgP7g2+Nyqe9z2Q9GXIToBXvQm9H+A8Ts3HhJAwAA"
   },
   "Metadata": {
    "aws:cdk:path": "CalisthenicsAppStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "CalisthenicsApiEndpointB44B6F5E": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "CalisthenicsApi2737E551"
      },
      ".execute-api.us-east-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
      },
      "/"
     ]
    ]
   }
  },
  "UserPoolId": {
   "Value": {
    "Ref": "CalisthenicsUserPoolE977672F"
   }
  },
  "UserPoolClientId": {
   "Value": {
    "Ref": "CalisthenicsUserPoolClientA2999F75"
   }
  },
  "ApiUrl": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "CalisthenicsApi2737E551"
      },
      ".execute-api.us-east-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
      },
      "/"
     ]
    ]
   }
  },
  "WebsiteUrl": {
   "Value": {
    "Fn::GetAtt": [
     "Distribution830FAC52",
     "DomainName"
    ]
   }
  },
  "EventImagesBucketName": {
   "Value": {
    "Ref": "EventImagesBucketA567DC75"
   }
  },
  "FrontendBucketName": {
   "Value": {
    "Ref": "WebsiteBucket75C24D94"
   }
  },
  "DistributionId": {
   "Value": {
    "Ref": "Distribution830FAC52"
   }
  },
  "FrontendConfig": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "{\"apiUrl\":\"https://",
      {
       "Ref": "CalisthenicsApi2737E551"
      },
      ".execute-api.us-east-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "CalisthenicsApiDeploymentStageprod0842EBBE"
      },
      "/\",\"userPoolId\":\"",
      {
       "Ref": "CalisthenicsUserPoolE977672F"
      },
      "\",\"userPoolClientId\":\"",
      {
       "Ref": "CalisthenicsUserPoolClientA2999F75"
      },
      "\",\"region\":\"us-east-2\"}"
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}